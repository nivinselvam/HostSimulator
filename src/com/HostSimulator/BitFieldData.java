/*--------------------------------------------------------------------------------------------
 * This file is used for maintaining the length of Bitfields per ISO 8583
 * All the positive numbers denote the exact length of the bitfield
 * Negative numbers denote that the bitfield has a variable length
 * -2 denotes that the first two bytes represents the length
 * -3 denotes that the first three bytes represents the length
 * -------------------------------------------------------------------------------------------
 */
package com.HostSimulator;

import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;

public class BitFieldData {

	public Map<String, Integer> bitfieldLength = new HashMap<String, Integer>();
	public Map<String,String> bitfieldValue = new LinkedHashMap<String,String>();

	public BitFieldData(boolean input) {
		if (input) {
			bitfieldLength.put("BITFIELD1", 8);
			bitfieldLength.put("BITFIELD2", -2);
			bitfieldLength.put("BITFIELD3", 6);
			bitfieldLength.put("BITFIELD4", 12);
			bitfieldLength.put("BITFIELD5", 0);
			bitfieldLength.put("BITFIELD6", 0);
			bitfieldLength.put("BITFIELD7", 10);
			bitfieldLength.put("BITFIELD8", 0);
			bitfieldLength.put("BITFIELD9", 0);
			bitfieldLength.put("BITFIELD10", 0);
			bitfieldLength.put("BITFIELD11", 6);
			bitfieldLength.put("BITFIELD12", 12);
			bitfieldLength.put("BITFIELD13", 0);
			bitfieldLength.put("BITFIELD14", 4);
			bitfieldLength.put("BITFIELD15", 6);
			bitfieldLength.put("BITFIELD16", 0);
			bitfieldLength.put("BITFIELD17", 4);
			bitfieldLength.put("BITFIELD18", 4);
			bitfieldLength.put("BITFIELD19", 3);
			bitfieldLength.put("BITFIELD20", 0);
			bitfieldLength.put("BITFIELD21", 0);
			bitfieldLength.put("BITFIELD22", 12);
			bitfieldLength.put("BITFIELD23", 3);
			bitfieldLength.put("BITFIELD24", 3);
			bitfieldLength.put("BITFIELD25", 4);
			bitfieldLength.put("BITFIELD26", 0);
			bitfieldLength.put("BITFIELD27", 0);
			bitfieldLength.put("BITFIELD28", 6);
			bitfieldLength.put("BITFIELD29", 0);
			bitfieldLength.put("BITFIELD30", 24);
			bitfieldLength.put("BITFIELD31", 0);
			bitfieldLength.put("BITFIELD32", -2);
			bitfieldLength.put("BITFIELD33", 0);
			bitfieldLength.put("BITFIELD34", -2);
			bitfieldLength.put("BITFIELD35", -2);
			bitfieldLength.put("BITFIELD36", 0);
			bitfieldLength.put("BITFIELD37", 12);
			bitfieldLength.put("BITFIELD38", 6);
			bitfieldLength.put("BITFIELD39", 3);
			bitfieldLength.put("BITFIELD40", 0);
			bitfieldLength.put("BITFIELD41", 8);
			bitfieldLength.put("BITFIELD42", 15);
			bitfieldLength.put("BITFIELD43", -2);
			bitfieldLength.put("BITFIELD44", -2);
			bitfieldLength.put("BITFIELD45", -2);
			bitfieldLength.put("BITFIELD46", -3);
			bitfieldLength.put("BITFIELD47", 0);
			bitfieldLength.put("BITFIELD48", -3);
			bitfieldLength.put("BITFIELD49", 3);
			bitfieldLength.put("BITFIELD50", 3);
			bitfieldLength.put("BITFIELD51", 0);
			bitfieldLength.put("BITFIELD52", 8);
			bitfieldLength.put("BITFIELD53", -2);
			bitfieldLength.put("BITFIELD54", -3);
			bitfieldLength.put("BITFIELD55", -3);
			bitfieldLength.put("BITFIELD56", -2);
			bitfieldLength.put("BITFIELD57", 0);
			bitfieldLength.put("BITFIELD58", -2);
			bitfieldLength.put("BITFIELD59", -3);
			bitfieldLength.put("BITFIELD60", 0);
			bitfieldLength.put("BITFIELD61", 0);
			bitfieldLength.put("BITFIELD62", -3);
			bitfieldLength.put("BITFIELD63", -3);
			bitfieldLength.put("BITFIELD64", 0);
			bitfieldLength.put("BITFIELD65", 0);
			bitfieldLength.put("BITFIELD66", 0);
			bitfieldLength.put("BITFIELD67", 0);
			bitfieldLength.put("BITFIELD68", 0);
			bitfieldLength.put("BITFIELD69", 0);
			bitfieldLength.put("BITFIELD70", 0);
			bitfieldLength.put("BITFIELD71", 0);
			bitfieldLength.put("BITFIELD72", -3);
			bitfieldLength.put("BITFIELD73", 6);
			bitfieldLength.put("BITFIELD74", 0);
			bitfieldLength.put("BITFIELD75", 0);
			bitfieldLength.put("BITFIELD76", 0);
			bitfieldLength.put("BITFIELD77", 0);
			bitfieldLength.put("BITFIELD78", 0);
			bitfieldLength.put("BITFIELD79", 0);
			bitfieldLength.put("BITFIELD80", 0);
			bitfieldLength.put("BITFIELD81", 0);
			bitfieldLength.put("BITFIELD82", 0);
			bitfieldLength.put("BITFIELD83", 0);
			bitfieldLength.put("BITFIELD84", 0);
			bitfieldLength.put("BITFIELD85", 0);
			bitfieldLength.put("BITFIELD86", 0);
			bitfieldLength.put("BITFIELD87", 0);
			bitfieldLength.put("BITFIELD88", 0);
			bitfieldLength.put("BITFIELD89", 0);
			bitfieldLength.put("BITFIELD90", 0);
			bitfieldLength.put("BITFIELD91", 0);
			bitfieldLength.put("BITFIELD92", 0);
			bitfieldLength.put("BITFIELD93", 0);
			bitfieldLength.put("BITFIELD94", 0);
			bitfieldLength.put("BITFIELD95", 0);
			bitfieldLength.put("BITFIELD96", -3);
			bitfieldLength.put("BITFIELD97", 16);
			bitfieldLength.put("BITFIELD98", 0);
			bitfieldLength.put("BITFIELD99", 0);
			bitfieldLength.put("BITFIELD100", 0);
			bitfieldLength.put("BITFIELD101", 0);
			bitfieldLength.put("BITFIELD102", -2);
			bitfieldLength.put("BITFIELD103", -2);
			bitfieldLength.put("BITFIELD104", 0);
			bitfieldLength.put("BITFIELD105", 0);
			bitfieldLength.put("BITFIELD106", 0);
			bitfieldLength.put("BITFIELD107", 0);
			bitfieldLength.put("BITFIELD108", 0);
			bitfieldLength.put("BITFIELD109", 0);
			bitfieldLength.put("BITFIELD110", 0);
			bitfieldLength.put("BITFIELD111", 0);
			bitfieldLength.put("BITFIELD112", 0);
			bitfieldLength.put("BITFIELD113", 0);
			bitfieldLength.put("BITFIELD114", 0);
			bitfieldLength.put("BITFIELD115", -3);
			bitfieldLength.put("BITFIELD116", -3);
			bitfieldLength.put("BITFIELD117", -3);
			bitfieldLength.put("BITFIELD118", 0);
			bitfieldLength.put("BITFIELD119", 0);
			bitfieldLength.put("BITFIELD120", 0);
			bitfieldLength.put("BITFIELD121", 0);
			bitfieldLength.put("BITFIELD122", 0);
			bitfieldLength.put("BITFIELD123", -3);
			bitfieldLength.put("BITFIELD124", -3);
			bitfieldLength.put("BITFIELD125", -3);
			bitfieldLength.put("BITFIELD126", -3);
			bitfieldLength.put("BITFIELD127", -3);
			bitfieldLength.put("BITFIELD128", 0);

		}else{
			bitfieldValue.put("BITFIELD1", "");
			bitfieldValue.put("BITFIELD2", "");
			bitfieldValue.put("BITFIELD3", "003000");
			bitfieldValue.put("BITFIELD4", "000000001249");
			bitfieldValue.put("BITFIELD5", "");
			bitfieldValue.put("BITFIELD6", "");
			bitfieldValue.put("BITFIELD7", "");
			bitfieldValue.put("BITFIELD8", "");
			bitfieldValue.put("BITFIELD9", "");
			bitfieldValue.put("BITFIELD10", "");
			bitfieldValue.put("BITFIELD11", "001195");
			bitfieldValue.put("BITFIELD12", "191129131423");
			bitfieldValue.put("BITFIELD13", "");
			bitfieldValue.put("BITFIELD14", "");
			bitfieldValue.put("BITFIELD15", "");
			bitfieldValue.put("BITFIELD16", "");
			bitfieldValue.put("BITFIELD17", "");
			bitfieldValue.put("BITFIELD18", "5541");
			bitfieldValue.put("BITFIELD19", "840");
			bitfieldValue.put("BITFIELD20", "");
			bitfieldValue.put("BITFIELD21", "");
			bitfieldValue.put("BITFIELD22", "a0010125414C");
			bitfieldValue.put("BITFIELD23", "");
			bitfieldValue.put("BITFIELD24", "200");
			bitfieldValue.put("BITFIELD25", "");
			bitfieldValue.put("BITFIELD26", "");
			bitfieldValue.put("BITFIELD27", "");
			bitfieldValue.put("BITFIELD28", "");
			bitfieldValue.put("BITFIELD29", "");
			bitfieldValue.put("BITFIELD30", "");
			bitfieldValue.put("BITFIELD31", "");
			bitfieldValue.put("BITFIELD32", "");
			bitfieldValue.put("BITFIELD33", "");
			bitfieldValue.put("BITFIELD34", "");
			bitfieldValue.put("BITFIELD35", "4123456051520060=201210110000377");
			bitfieldValue.put("BITFIELD36", "");
			bitfieldValue.put("BITFIELD37", "");
			bitfieldValue.put("BITFIELD38", "");
			bitfieldValue.put("BITFIELD39", "");
			bitfieldValue.put("BITFIELD40", "");
			bitfieldValue.put("BITFIELD41", "TESO");
			bitfieldValue.put("BITFIELD42", "TESOTEST25");
			bitfieldValue.put("BITFIELD43", "");
			bitfieldValue.put("BITFIELD44", "");
			bitfieldValue.put("BITFIELD45", "");
			bitfieldValue.put("BITFIELD46", "");
			bitfieldValue.put("BITFIELD47", "");
			bitfieldValue.put("BITFIELD48", "    Á   VI  03JYN03100111190004    ");
			bitfieldValue.put("BITFIELD49", "840");
			bitfieldValue.put("BITFIELD50", "");
			bitfieldValue.put("BITFIELD51", "");
			bitfieldValue.put("BITFIELD52", "");
			bitfieldValue.put("BITFIELD53", "");
			bitfieldValue.put("BITFIELD54", "3056840D000000000250");
			bitfieldValue.put("BITFIELD55", "");
			bitfieldValue.put("BITFIELD56", "");
			bitfieldValue.put("BITFIELD57", "");
			bitfieldValue.put("BITFIELD58", "");
			bitfieldValue.put("BITFIELD59", "");
			bitfieldValue.put("BITFIELD60", "");
			bitfieldValue.put("BITFIELD61", "");
			bitfieldValue.put("BITFIELD62", "01IID04001 ");
			bitfieldValue.put("BITFIELD63", "");
			bitfieldValue.put("BITFIELD64", "");
			bitfieldValue.put("BITFIELD65", "");
			bitfieldValue.put("BITFIELD66", "");
			bitfieldValue.put("BITFIELD67", "");
			bitfieldValue.put("BITFIELD68", "");
			bitfieldValue.put("BITFIELD69", "");
			bitfieldValue.put("BITFIELD70", "");
			bitfieldValue.put("BITFIELD71", "");
			bitfieldValue.put("BITFIELD72", "");
			bitfieldValue.put("BITFIELD73", "");
			bitfieldValue.put("BITFIELD74", "");
			bitfieldValue.put("BITFIELD75", "");
			bitfieldValue.put("BITFIELD76", "");
			bitfieldValue.put("BITFIELD77", "");
			bitfieldValue.put("BITFIELD78", "");
			bitfieldValue.put("BITFIELD79", "");
			bitfieldValue.put("BITFIELD80", "");
			bitfieldValue.put("BITFIELD81", "");
			bitfieldValue.put("BITFIELD82", "");
			bitfieldValue.put("BITFIELD83", "");
			bitfieldValue.put("BITFIELD84", "");
			bitfieldValue.put("BITFIELD85", "");
			bitfieldValue.put("BITFIELD86", "");
			bitfieldValue.put("BITFIELD87", "");
			bitfieldValue.put("BITFIELD88", "");
			bitfieldValue.put("BITFIELD89", "");
			bitfieldValue.put("BITFIELD90", "");
			bitfieldValue.put("BITFIELD91", "");
			bitfieldValue.put("BITFIELD92", "");
			bitfieldValue.put("BITFIELD93", "");
			bitfieldValue.put("BITFIELD94", "");
			bitfieldValue.put("BITFIELD95", "");
			bitfieldValue.put("BITFIELD96", "");
			bitfieldValue.put("BITFIELD97", "");
			bitfieldValue.put("BITFIELD98", "");
			bitfieldValue.put("BITFIELD99", "");
			bitfieldValue.put("BITFIELD100", "");
			bitfieldValue.put("BITFIELD101", "");
			bitfieldValue.put("BITFIELD102", "");
			bitfieldValue.put("BITFIELD103", "");
			bitfieldValue.put("BITFIELD104", "");
			bitfieldValue.put("BITFIELD105", "");
			bitfieldValue.put("BITFIELD106", "");
			bitfieldValue.put("BITFIELD107", "");
			bitfieldValue.put("BITFIELD108", "");
			bitfieldValue.put("BITFIELD109", "");
			bitfieldValue.put("BITFIELD110", "");
			bitfieldValue.put("BITFIELD111", "");
			bitfieldValue.put("BITFIELD112", "");
			bitfieldValue.put("BITFIELD113", "");
			bitfieldValue.put("BITFIELD114", "");
			bitfieldValue.put("BITFIELD115", "");
			bitfieldValue.put("BITFIELD116", "");
			bitfieldValue.put("BITFIELD117", "");
			bitfieldValue.put("BITFIELD118", "");
			bitfieldValue.put("BITFIELD119", "");
			bitfieldValue.put("BITFIELD120", "");
			bitfieldValue.put("BITFIELD121", "");
			bitfieldValue.put("BITFIELD122", "");
			bitfieldValue.put("BITFIELD123", "");
			bitfieldValue.put("BITFIELD124", "");
			bitfieldValue.put("BITFIELD125", "");
			bitfieldValue.put("BITFIELD126", "");
			bitfieldValue.put("BITFIELD127", "");
			bitfieldValue.put("BITFIELD128", "");
		}
	}
}